services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ft_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 50M
          cpus: '0.1'

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ft_backend
    expose:
      - "3000"
    environment:
      - DB_PATH=/app/data/ft_transcendence.db
      - NODE_ENV=production
      - FRONTEND_URL=http://50.19.72.26
      - BACKEND_URL=http://50.19.72.26
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-key-at-least-32-characters-long-and-random}
    volumes:
      - ./data:/app/data
      - ./logs/backend:/app/logs
    working_dir: /app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '0.3'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: ft_frontend
    expose:
      - "80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://50.19.72.26
    restart: unless-stopped
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 100M
          cpus: '0.2'

  sqlite-web:
    image: coleifer/sqlite-web
    container_name: ft_sqlite_web
    ports:
      - "8086:8080"
    volumes:
      - ./data:/data
    command: python -m sqlite_web -H 0.0.0.0 -x /data/ft_transcendence.db
    restart: unless-stopped
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 50M
          cpus: '0.1'

networks:
  app_network:
    driver: bridge

volumes:
  app_data: